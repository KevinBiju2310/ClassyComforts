<%- include("../layouts/userHeader") %>

    <style>
        .table td,
        .table th {
            text-align: center;
            vertical-align: middle;
            width: 12.5%;
        }

        .delivery-table {
            width: 50%;
            /* Adjust the width as needed */
            margin: 0 auto;
            /* Center the table horizontally */
            border-collapse: collapse;
            border: 1px solid #ddd;
        }

        .delivery-table th,
        .delivery-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
            /* Center the content horizontally */
        }

        .delivery-table th {
            background-color: #f2f2f2;
        }

        .button-container {
            text-align: center;
            margin-top: 20px;
        }

        .button-container button {
            margin: 0 10px;
        }
    </style>

    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow">Home</a>
                    <span></span> Pages
                    <span></span> orderDetails
                </div>
            </div>
        </div>
        <section class="pt-70 pb-70" id="invoiceSection">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12 m-auto"> <!-- Adjusted the column width -->
                        <div class="row">
                            <div class="col-md-12"> <!-- Adjusted the column width -->
                                <div class="tab-content dashboard-content">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5 class="mb-0">Your Orders</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-bordered table-striped ">
                                                    <thead>
                                                        <tr>
                                                            <th>Order Date</th>
                                                            <th>Image</th>
                                                            <th>Product Name</th>
                                                            <th>Order Status</th>
                                                            <th>Payment Method</th>
                                                            <th>Payment Status</th>
                                                            <th>Price</th>
                                                            <th>Quantity</th>
                                                            <th>Total</th>
                                                            <% if (order.products.length> 1) { %>
                                                                <!-- Check if there are more than one product -->
                                                                <th>Action</th>
                                                                <!-- Added a new column for the action button if more than one product -->
                                                                <% } %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% order.products.forEach((product, index)=> { %>
                                                            <tr id="orderRow_<%= index %>">
                                                                <td>
                                                                    <%= order.createdAt.toDateString() %>
                                                                </td>
                                                                <td>
                                                                    <img src="/uploads/<%= product.productId.productImages[0] %>"
                                                                        alt="<%= product.productId.productname %>"
                                                                        style="max-width: 100px;">
                                                                </td>
                                                                <td>
                                                                    <%= product.productId.productname %>
                                                                </td>
                                                                <td id="orderStatus_<%= index %>">
                                                                    <!-- Unique identifier added -->
                                                                    <%= order.orderStatus %>
                                                                </td>
                                                                <td>
                                                                    <%= order.paymentMethod %>
                                                                </td>
                                                                <td>
                                                                    <%= order.paymentStatus %>
                                                                </td>
                                                                <td>$<%= product.productPrice.toFixed(2) %>
                                                                </td>
                                                                <td>
                                                                    <%= product.quantity %>
                                                                </td>
                                                                <td>$<%= (product.productPrice *
                                                                        product.quantity).toFixed(2) %>
                                                                </td>
                                                                <% if (order.products.length> 1) { %>
                                                                    <td>
                                                                        <button type="button"
                                                                            class="btn btn-danger btn-remove"
                                                                            onclick="handleRemoveButtonClick('<%= product.productId._id %>', '<%= order._id %>', '<%= index %>')">
                                                                            Remove
                                                                        </button>
                                                                    </td>
                                                                    <% } %>
                                                            </tr>
                                                            <% }); %>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mt-4">

                                        <table class="delivery-table">
                                            <tbody>
                                                <tr>
                                                    <th>Grand Total</th>
                                                    <td>$<%= order.totalAmount.toFixed(2) %>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Delivery Address</th>
                                                    <td>
                                                        <% order.address.forEach(addr=> { %>
                                                            <address>
                                                                <%= addr.name %><br>
                                                                    <%= addr.address %><br>
                                                                        <%= addr.city %>, <%= addr.state %>
                                                                                <%= addr.pincode %><br>
                                                                                    <%= addr.district %>
                                                            </address>
                                                            <% }); %>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <div class="button-container mb-15">
            <button id="cancelOrderBtn" class="btn btn-danger" data-toggle="modal"
                data-target="#cancelOrderModal">Cancel Order</button>
            <button id="downloadInvoiceBtn" class="btn btn-primary">Download
                Invoice</button>
        </div>
    </main>


    <!-- Modal -->
    <div class="modal fade" id="cancelOrderModal" tabindex="-1" role="dialog" aria-labelledby="cancelOrderModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelOrderModalLabel">Cancel Order</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="cancelOrderForm">
                        <div class="form-group">
                            <label for="cancelReason">Reason for cancellation:</label>
                            <input type="text" class="form-control" id="cancelReason" name="cancelReason" required>
                            <input type="hidden" id="orderId" name="orderId">
                            <input type="hidden" id="paymentMethod" name="paymentMethod"
                                value="<%= order.paymentMethod %>"> <!-- Add hidden input for paymentMethod -->
                            <input type="hidden" id="paymentStatus" name="paymentStatus"
                                value="<%= order.paymentStatus %>"> <!-- Add hidden input for paymentStatus -->
                        </div>
                        <button type="submit" class="btn btn-primary">Confirm</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <script>
        // Add this at the end of the script block
        document.addEventListener("DOMContentLoaded", function () {
            const orderStatus = "<%= order.orderStatus %>";
            if (orderStatus === "cancelled") {
                document.getElementById('cancelOrderBtn').disabled = true;
                document.getElementById('downloadInvoiceBtn').disabled = true;
            } else if (orderStatus === "shipped" || orderStatus === "delivered") {
                document.getElementById('cancelOrderBtn').disabled = true;
            }
        });

        document.getElementById('cancelOrderBtn').addEventListener('click', function () {
            $('#cancelOrderModal').modal('show');
            document.getElementById('orderId').value = "<%= order._id %>";
        });

        document.getElementById('cancelOrderForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const cancelReason = document.getElementById('cancelReason').value;
            const orderId = document.getElementById('orderId').value;
            const paymentMethod = document.getElementById('paymentMethod').value;
            const paymentStatus = document.getElementById('paymentStatus').value;
            try {
                const response = await fetch('/user/cancelOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, cancelReason, paymentMethod, paymentStatus })
                });

                if (response.ok) {
                    $('#cancelOrderModal').modal('hide');
                    // Update order status to "Cancelled" in frontend
                    order.products.forEach((product, index) => {
                        document.getElementById(`orderStatus_${index}`).innerText = 'cancelled';
                    });
                    // Disable cancel order and download invoice buttons
                    document.getElementById('cancelOrderBtn').disabled = true;
                    document.getElementById('downloadInvoiceBtn').disabled = true;
                    // Store flag in local storage
                    localStorage.setItem(`cancelled_${orderId}`, true);
                } else {
                    console.error('Failed to cancel order');
                }
            } catch (error) {
                console.error('Error occurred:', error);
            }
        });


        // document.getElementById('downloadInvoiceBtn').addEventListener('click', async () => {
        //     // Get the order ID
        //     const orderId = '<%= order._id %>';

        //     try {
        //         // Fetch the invoice PDF using a POST request
        //         const response = await fetch(`/user/invoice/${orderId}`, {
        //             method: 'POST',
        //             headers: {
        //                 'Content-Type': 'application/json'
        //             }
        //         });

        //         if (!response.ok) {
        //             console.error('Failed to download invoice');
        //             return;
        //         }

        //         // Convert the response to a blob
        //         const blob = await response.blob();

        //         // Create a temporary URL for the blob
        //         const url = window.URL.createObjectURL(blob);

        //         // Create a link element to trigger the download
        //         const a = document.createElement('a');
        //         a.href = url;
        //         a.download = `invoice_${orderId}.pdf`;

        //         // Trigger the click event on the link
        //         a.click();

        //         // Release the object URL
        //         window.URL.revokeObjectURL(url);
        //     } catch (error) {
        //         console.error('Error occurred while downloading invoice:', error);
        //     }
        // });
        document.getElementById('downloadInvoiceBtn').addEventListener('click', function () {
            const invoiceSection = document.getElementById('invoiceSection');
            const options = {
                filename: 'invoice.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'A4', orientation: 'portrait' }
            };
            html2pdf().from(invoiceSection).set(options).save();
        });



        function handleRemoveButtonClick(productId, orderId, index) {
            console.log(productId, orderId, index)
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to remove this product from your order',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        console.log("hello")
                        const response = await fetch(`/user/removeproduct`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ productId, orderId })
                        });

                        if (response.ok) {
                            // Remove the row from the table
                            document.getElementById(`orderRow_${index}`).remove();

                            // Optionally update the total amount in frontend
                            const totalAmountCell = document.getElementById('totalAmount');
                            const newTotalAmount = parseFloat(totalAmountCell.textContent.replace('$', '')) - parseFloat(document.getElementById(`productTotal_${index}`).textContent.replace('$', ''));
                            totalAmountCell.textContent = `$${newTotalAmount.toFixed(2)}`;

                            Swal.fire(
                                'Removed!',
                                'The product has been removed from your order.',
                                'success'
                            );
                        } else {
                            console.error('Failed to remove product');
                            Swal.fire(
                                'Error!',
                                'Failed to remove the product. Please try again later.',
                                'error'
                            );
                        }
                    } catch (error) {
                        console.error('Error occurred:', error);
                        Swal.fire(
                            'Error!',
                            'An unexpected error occurred. Please try again later.',
                            'error'
                        );
                    }
                }
            });
        }
    </script>


    <%- include("../layouts/userFooter") %>